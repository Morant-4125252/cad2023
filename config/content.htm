<h1>About</h1>
<p><a href="https://github.com/mdecycu/cmsite"> https://github.com/mdecycu/cmsite </a></p>
<p>w6</p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation (Python 採 4 個 Spaces 縮排, 以界定執行範圍)</h4>
<h4>Variables (<a href="https://github.com/python/cpython/blob/3.11/Lib/keyword.py">Python Keywords</a>)</h4>
<h4>Comments (# 單行註解, 三個單引號或三個雙引號標註多行註解)</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a> (整數 int(), 浮點數 float())</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a> (字串)</h4>
<h4>print (Python 內建函式, <a href="https://docs.python.org/3/library/functions.html#print">print()</a> 函式)</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button><button id="threejsblock">Rotating Block</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
################################## threejsblock start
threejsblock_url = "https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/df37802f9e8a386b6424f7945af622b1cd0a9ca5/threejs_rotating_block.py"
threejsblock = button2(threejsblock_url)
doc["threejsblock"].bind("click", threejsblock.do)
################################## threejsblock end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<h1>w4~w5</h1>
<h2>siemens</h2>
<p>西門子 (Siemens) 是德國有名的機電資軟硬體整合公司, 目前旗下的電腦輔助機械設計套件包括中階套件<span> </span><span>Solid Edge (<a href="https://solidedge.siemens.com/en/solutions/users/hobbyists-and-makers/">community 版 Siemens Solid Edge</a> - <a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/Ef9XW25wCPtCspWavfXRQkYBKeFkOnZDfMyA3Q-1DRhDNA?e=grfmFo">可攜版下載</a><span> </span>(無須上網即可開啟, 但因為啟動之前必須執行 Solid Edge 所需之 Registry import, 因此可攜版比較建議在有還原卡或虛擬主機中使用, for @nfu users only), 與高階套件 NX.</span></p>
<p><span>下載<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EdHAOThcQztGj4EZy5Duab0Bvcf3AbzsC_MLsCfmwBXAFg?e=4dPh6O">NX2027.3401_lite_cad2022.7z</a><span> </span>(需要下載密碼, 執行時必須連網至機械設計工程系的認證伺服器才能開啟)</span></p>
<h2>solidworks</h2>
<p><span>SOLIDWORKS</span><span> </span>是目前全球機械業界使用最普遍的設計與繪圖套件 (估計全球有超過 300 萬名工程師用戶). 有關 CAD 的發展歷史, 請參考<a href="https://www.youtube.com/watch?v=mcwIMsh_g3o">這個影片</a>. 有關 SOLIDWORKS 的起源以及相關歷史資料, 請參考<a href="https://www.youtube.com/watch?v=BXMPY36xWJY">影片一</a>、<a href="https://www.youtube.com/watch?v=zqnIVRCMeSA">影片二</a>、<a href="https://www.youtube.com/watch?v=6vxLejTtSJw">影片三</a>、<a href="https://www.youtube.com/watch?v=-r2T-nV5eVc">影片四</a>與<a href="https://www.youtube.com/watch?v=RgUSsXdLjvc">影片五</a>的介紹.</p>
<p>其他與 SOLIDWORKS 有關的參考資料:</p>
<p><span>SOLIDWORKS 是由<span> </span><a href="https://en.wikipedia.org/wiki/Jon_Hirschtick">Jon Hirschtick</a><span> </span>在1993 年創立的。他運用作為<span> </span><a href="https://en.wikipedia.org/wiki/MIT_Blackjack_Team">MIT Blackjack Team</a><span> </span>(<a href="https://en.wikipedia.org/wiki/21_(2008_film)">決勝 21 點電影</a>) 成員之一所賺到的 100 萬美元創辦該公司。SOLIDWORKS 首次於1995 年與 Windows 95 同時發布.<span> </span><a href="https://dev.co/solidworks">(source</a>)</span></p>
<p><span>interviews of Jon Hirschtick, </span><a href="https://soundcloud.com/robot-report-podcast/jon-hirschtick-from-onshapeptc-favorite-robotics-startups-of-2020">1</a>, <a href="https://medium.com/authority-magazine/jon-hirschtick-of-onshape-5-things-you-need-to-know-to-create-a-successful-saas-business-b768dc98c6eb">2</a>, <a href="https://www.linkedin.com/pulse/cofes-institute-interview-jon-hirschtick-vincent-caprio">3</a>, <a href="https://www.forbes.com/sites/tjmccue/2016/12/19/state-of-3d-software-interview-with-onshape-ceo-jon-hirschtick/?sh=3667798610b3">4</a>, <a href="https://www.linkedin.com/pulse/3-stories-one-told-you-jon-hirschtick-leadership-edition-zain-raza">5</a></p>
<p>當年 <a href="https://www.youtube.com/watch?v=9NIu-Lh_HWo">SolidWorks 97 demo 影片</a></p>
<p>使用 SOLIDWORKS 執行電腦輔助設計零組件繪圖, 在電腦輔助設計室中可以使用 SOLIDWORKS 2023, 或在自己的電腦或筆電中安裝 SOLIDWORKS 2022 教育版 (2023 安裝套件尚未取得).</p>
<p><span>下載安裝 SOLIDWORKS 2022</span>:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EY9GinJ2ns5Iiy-ih3-y9xwBdgl3H-ajMPZOIxZhd9Nssg?e=jP7Y4T">下載 SolidWorks 2022 安裝檔案</a><span> </span>(檔案大小 16GB, for @nfu users only, 請先根據安裝序號與認證主機在校園網路中或透過 VPN (從<span> </span><a href="https://ecare.nfu.edu.tw/">ecare 登入</a>申請) 連網, 必須完整安裝結束後, 再進行 service pack 更新)</p>
<p>安裝 SoildWorks 2022 過程畫面 (因為必須在校園內或使用 VPN 認證才能完成安裝, 因此以下直接顯示出 Serial Number 與認證主機 IP 位址):</p>
<p>下載後解開壓縮檔案, 執行 Setup.exe 進行安裝 (以::2 主機的安裝為例):</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_1.png" width="400"/></p>
<p>輸入安裝序號, 以下只安裝基本模組, 並沒有勾選其餘套件:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_2.png" width="400"/></p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_3.png" width="400"/></p>
<p>在安裝過程必須先安裝與序號對應的版本內容後再進行更新, 因此以下使用內定的否, 表示先不下載更新檔案:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_4.png" width="400"/></p>
<p>勾選接受 SolidWorks 條款後進行安裝:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_5.png" width="400"/></p>
<p>點選馬上安裝後,  會跳出認證伺服器的視窗表單, 必須輸入正確的認證埠號與 IPv4 位址才可進行安裝, 截至 2023.04.07, 校內的 SolidWorks 認證主機僅支援 IPv4 網路協定認證, 若希望取得認證的電腦僅啟動 IPv6 網路協定, 將無法取得認證授權.</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_6.png" width="400"/></p>
<p>接著按下確定後, 就可以進行漫長且容量達 20 GB 的 SolidWorks 安裝:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_7.png" width="400"/></p>
<p>安裝完成之前, 會跳出下列視窗, 可以選擇不參加客戶經驗改進計畫, 或許能讓操作過程更加順暢:</p>
<p><img alt="" height="353" src="https://mde.tw/cadnote/images/solidworks2022_installation_8.png" width="400"/></p>
<p>最後按下完成鍵就可以執行 SolidWorks 2022 了.</p>
<p>啟動時顯示共有 500 個用戶可以同時連線:</p>
<p><img alt="" height="273" src="https://mde.tw/cadnote/images/solidworks2022_installation_9.png" width="400"/></p>
<p>啟動時必須允許 SolidWorks 通過公用網路防火牆:</p>
<p><img alt="" height="293" src="https://mde.tw/cadnote/images/solidworks2022_installation_10.png" width="400"/></p>
<p>而且必須接受 SolidWorks 的使用授權:</p>
<p><img alt="" height="293" src="https://mde.tw/cadnote/images/solidworks2022_installation_11.png" width="400"/></p>
<p>然後還要進行各模組的資料更新, 以下選擇更新所有模組:</p>
<p><img alt="" height="290" src="https://mde.tw/cadnote/images/solidworks2022_installation_12.png" width="400"/></p>
<p>更新完成後, 在開始選單中執行 SOLIDWORKS 2022, 然後同意使用授權:</p>
<p><img alt="" height="347" src="https://mde.tw/cadnote/images/solidworks2022_installation_13.png" width="400"/></p>
<p>終於可以使用這個佔用 20GB 硬碟資料的 SolidWorks 了:</p>
<p><img alt="" height="216" src="https://mde.tw/cadnote/images/solidworks2022_installation_14.png" width="400"/></p>
<h2>autodesk</h2>
<p><span>AutoDesk 公司旗下的電腦輔助機械設計套件都提供<a href="https://www.autodesk.com/education/edu-software/overview">免付費教育版</a>. 其中 Inventor 可<a href="https://software.nfu.edu.tw/Autodesk/autodesk2022.pdf">直接從學校網站下載</a>, 且<a href="https://accounts.autodesk.com/register">教育版的 A360</a><span> </span>可在雲端或近端啟動, 但近端必須安裝對應套件.</span></p>
<h2>ptc</h2>
<p><a href="https://www.ptc.com/">PTC</a><span> </span>公司目前擁有 Creo 與<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>等兩套常見的電腦輔助機械設計套件. Creo 前身為著名的參數設計繪圖鼻祖 Pro/Engineer, 而<span> </span><a href="https://www.onshape.com/">Onshape</a><span> </span>則由原創 SOLIDWORKS 的開發者所建立的全雲端電腦輔助機械設計服務.</p>
<p>Creo for students:<span> </span><a href="https://www.ptc.com/en/products/education/free-software/creo-college-download">https://www.ptc.com/en/products/education/free-software/creo-college-download</a></p>
<p>Onshape for education:<span> </span><a href="https://www.onshape.com/en/education/">https://www.onshape.com/en/education/</a></p>
<h1>w6-w7</h1>
<p>w5 之前的教學影片:</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/Ed9GeWN75kJDmWsdXEeEDukBetqQ1g_3tA_PoIY-dHXDgw?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=e6bNYA">利用隨身碟上的批次檔案進行電腦輔助設計室網路環境設定</a> (更完整的<a href="https://cpnote.wcms.repl.co/get_page/setup">網路設定內容</a>)</p>
<p><a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/ETWPxa6xUsJIvj8Ln0hiFVEB3rbHzuuUZ1z458BELWuu0A?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=qFa0uZ">w5 2b 從 Onshape 轉出零組件 STL 後轉入 CoppeliaSim 操作說明</a></p>
<hr/>
<p>w6</p>
<p>評分網站與倉儲:</p>
<p><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2a_site_repo.py">2a cad2023 學員網站與倉儲連結</a></p>
<p><a href="https://41123120.github.io/cad2023_ag1">ag1</a><span> </span>(<a href="https://github.com/41123120/cad2023_ag1">repo</a>)</p>
<p><a href="https://probe2004.github.io/cad2023_ag2">ag2</a><span> </span>(<a href="https://github.com/probe2004/cad2023_ag2">repo</a>)</p>
<p><a href="https://corn723.github.io/cad2023_ag3">ag3</a><span> </span>(<a href="https://github.com/Corn723/cad2023_ag3">repo</a>)</p>
<p><a href="https://41123112.github.io/cad2023_ag4">ag4</a><span> </span>(<a href="https://github.com/41123112/cad2023_ag4">repo</a>)</p>
<p><a href="https://41023134.github.io/cad2023_ag5">ag5</a><span> </span>(<a href="https://github.com/41023134/cad2023_ag5">repo</a>)</p>
<p><a href="https://40923127-1.github.io/cad2023_ag6">ag6</a><span> </span>(<a href="https://github.com/40923127-1/cad2023_ag6">repo</a>)</p>
<p><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2b_site_repo.py">2b cad2023 學員網站與倉儲連結</a></p>
<p>學員展示用 IPv6 位址:</p>
<p>2a 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cada::<a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2a_site_repo.py">班級名單序號</a></p>
<p><span>2b 學員展示用 IPv6 位址: 2001:288:6004:17:2023:cadb::</span><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/afc0e4d2267199743ac44bc7aeb0c4b195a30abb/generate_cad2023_2b_site_repo.py">班級名單序號</a></p>
<p>建立線上考試題目:</p>
<p>學員完成任務一零組件繪圖</p>
<p>學習如何利用 zmqRemote API Python 控制模擬場景中的零組件</p>
<p>2a w6 已經建立評分倉儲, 設定 Pages, import 進入 Replit, 並能推送版本回到 github<span> </span><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/ae4f22fca4d70678714fe1c5fc74cf6255a322d1/cad2023_a_w5_elite.py">名單</a>:</p>
<p><a href="https://40923118.github.io/cad2023">40923118</a><span><span> </span>(</span><a href="https://github.com/40923118/cad2023">repo</a><span>)</span><br/><a href="https://40923124.github.io/cad2023">40923124</a><span><span> </span>(</span><a href="https://github.com/40923124/cad2023">repo</a><span>)</span><br/><a href="https://40923127-1.github.io/cad2023">40923127</a><span><span> </span>(</span><a href="https://github.com/40923127-1/cad2023">repo</a><span>)</span><br/><a href="https://40923139.github.io/cad2023">40923139</a><span><span> </span>(</span><a href="https://github.com/40923139/cad2023">repo</a><span>)</span><br/><a href="https://40923213.github.io/cad2023">40923213</a><span><span> </span>(</span><a href="https://github.com/40923213/cad2023">repo</a><span>)</span><br/><a href="https://41023134.github.io/cad2023">41023134</a><span><span> </span>(</span><a href="https://github.com/41023134/cad2023">repo</a><span>)</span><br/><a href="https://41023155.github.io/cad2023">41023155</a><span><span> </span>(</span><a href="https://github.com/41023155/cad2023">repo</a><span>)</span><br/><a href="https://41023156.github.io/cad2023">41023156</a><span><span> </span>(</span><a href="https://github.com/41023156/cad2023">repo</a><span>)</span><br/><a href="https://jyunci01.github.io/cad2023">41123105</a><span><span> </span>(</span><a href="https://github.com/jyunci01/cad2023">repo</a><span>)</span><br/><a href="https://41123108.github.io/cad2023">41123108</a><span><span> </span>(</span><a href="https://github.com/41123108/cad2023">repo</a><span>)</span><br/><a href="https://kevingg601.github.io/cad2023">41123111</a><span><span> </span>(</span><a href="https://github.com/kevingg601/cad2023">repo</a><span>)</span><br/><a href="https://41123112.github.io/cad2023">41123112</a><span><span> </span>(</span><a href="https://github.com/41123112/cad2023">repo</a><span>)</span><br/><a href="https://fxyjkyxzx.github.io/cad2023">41123114</a><span><span> </span>(</span><a href="https://github.com/fxyjkyxzx/cad2023">repo</a><span>)</span><br/><a href="https://41123115.github.io/cad2023">41123115</a><span><span> </span>(</span><a href="https://github.com/41123115/cad2023">repo</a><span>)</span><br/><a href="https://linkk0514.github.io/cad2023">41123116</a><span><span> </span>(</span><a href="https://github.com/linkk0514/cad2023">repo</a><span>)</span><br/><a href="https://cc-box.github.io/cad2023">41123117</a><span><span> </span>(</span><a href="https://github.com/cc-box/cad2023">repo</a><span>)</span><br/><a href="https://qiu0908.github.io/cad2023">41123119</a><span><span> </span>(</span><a href="https://github.com/QIU0908/cad2023">repo</a><span>)</span><br/><a href="https://41123120.github.io/cad2023">41123120</a><span><span> </span>(</span><a href="https://github.com/41123120/cad2023">repo</a><span>)</span><br/><a href="https://41123122.github.io/cad2023">41123122</a><span><span> </span>(</span><a href="https://github.com/41123122/cad2023">repo</a><span>)</span><br/><a href="https://41123123.github.io/cad2023">41123123</a><span><span> </span>(</span><a href="https://github.com/41123123/cad2023">repo</a><span>)</span><br/><a href="https://probe2004.github.io/cad2023">41123124</a><span><span> </span>(</span><a href="https://github.com/probe2004/cad2023">repo</a><span>)</span><br/><a href="https://41123126.github.io/cad2023">41123126</a><span><span> </span>(</span><a href="https://github.com/41123126/cad2023">repo</a><span>)</span><br/><a href="https://zhiyaooo28.github.io/cad2023">41123128</a><span><span> </span>(</span><a href="https://github.com/zhiyaooo28/cad2023">repo</a><span>)</span><br/><a href="https://jason920929.github.io/cad2023">41123129</a><span><span> </span>(</span><a href="https://github.com/Jason920929/cad2023">repo</a><span>)</span><br/><a href="https://41123130.github.io/cad2023">41123130</a><span><span> </span>(</span><a href="https://github.com/41123130/cad2023">repo</a><span>)</span><br/><a href="https://41123134.github.io/cad2023">41123134</a><span><span> </span>(</span><a href="https://github.com/41123134/cad2023">repo</a><span>)</span><br/><a href="https://corn723.github.io/cad2023">41123135</a><span><span> </span>(</span><a href="https://github.com/Corn723/cad2023">repo</a><span>)</span><br/><a href="https://q36180005.github.io/cad2023">41123137</a><span><span> </span>(</span><a href="https://github.com/q36180005/cad2023">repo</a><span>)</span><br/><a href="https://41123139.github.io/cad2023">41123139</a><span><span> </span>(</span><a href="https://github.com/41123139/cad2023">repo</a><span>)</span><br/><a href="https://timmy930823.github.io/cad2023">41123140</a><span><span> </span>(</span><a href="https://github.com/Timmy930823/cad2023">repo</a><span>)</span><br/><a href="https://jun41123.github.io/cad2023">41123141</a><span><span> </span>(</span><a href="https://github.com/Jun41123/cad2023">repo</a><span>)</span><br/><a href="https://liaots.github.io/cad2023">41123142</a><span><span> </span>(</span><a href="https://github.com/Liaots/cad2023">repo</a><span>)</span><br/><a href="https://41123143.github.io/cad2023">41123143</a><span><span> </span>(</span><a href="https://github.com/41123143/cad2023">repo</a><span>)</span><br/><a href="https://41123144.github.io/cad2023">41123144</a><span><span> </span>(</span><a href="https://github.com/41123144/cad2023">repo</a><span>)</span><br/><a href="https://41123145.github.io/cad2023">41123145</a><span><span> </span>(</span><a href="https://github.com/41123145/cad2023">repo</a><span>)</span><br/><a href="https://41123146ray.github.io/cad2023">41123146</a><span><span> </span>(</span><a href="https://github.com/41123146ray/cad2023">repo</a><span>)</span><br/><a href="https://iyuans.github.io/cad2023">41123148</a><span><span> </span>(</span><a href="https://github.com/iyuans/cad2023">repo</a><span>)</span><br/><a href="https://hsiaoyu-sen.github.io/cad2023">41123149</a><span><span> </span>(</span><a href="https://github.com/HSIAOYU-SEN/cad2023">repo</a><span>)</span><br/><a href="https://duncan9101.github.io/cad2023">41123150</a><span><span> </span>(</span><a href="https://github.com/duncan9101/cad2023">repo</a><span>)</span><br/><a href="https://41123152.github.io/cad2023">41123152</a><span><span> </span>(</span><a href="https://github.com/41123152/cad2023">repo</a><span>)</span></p>
<p>2b w6 已經建立評分倉儲, 設定 Pages, import 進入 Replit, 並能推送版本回到 github<span> </span><a href="https://mde.tw/cadnote/content/Brython.html?src=https://gist.githubusercontent.com/mdecycu/9215c7c160119721ded887018cda8f4e/raw/ae4f22fca4d70678714fe1c5fc74cf6255a322d1/cad2023_b_w5_elite.py">名單</a>:</p>
<p>41123205<br/>41123215<br/>41123216<br/>41123220<br/>41123231<br/>41123241<br/>41123243<br/>41123251</p>
<p>利用 pull request 加入或修改<span> </span><a href="https://github.com/mdecycu/studlist">https://github.com/mdecycu/studlist</a> 倉儲中<span> </span><a href="https://github.com/mdecycu/studlist/blob/main/2023fall/2b.txt">2b.txt</a><span> </span>資料的<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EYcLIH7IUSFNtsuAwuLLebIBc0ifcIJ84bb5rQP0TCeXoQ?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=ADb8Eb">說明影片</a>.</p>
<p>利用<span> </span><a href="https://github.com/mdecycu/cmsite">https://github.com/mdecycu/cmsite</a> 作為 template 建立 cad2023 倉儲與網站, 並轉入 Replit 進行維護的<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EQ5O70HX369FsOYywm2Is6oBCFWC3YfTVEf2e1AmWX_8YA?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=Didp9k">說明影片</a>.</p>
<p>2a 開始進行九人一組, 每三人坐在一起, 由組長建立 cad2023_ag1 ~ cad2023_ag6, 並將 mdecycu 設為協同者的<a href="https://nfuedu-my.sharepoint.com/:v:/g/personal/yen_nfu_edu_tw/EVBAMlhT_GxFhl94UqrYq5gBdpBF4_3AGkzo-IaebzKCTg?nav=eyJyZWZlcnJhbEluZm8iOnsicmVmZXJyYWxBcHAiOiJPbmVEcml2ZUZvckJ1c2luZXNzIiwicmVmZXJyYWxBcHBQbGF0Zm9ybSI6IldlYiIsInJlZmVycmFsTW9kZSI6InZpZXciLCJyZWZlcnJhbFZpZXciOiJNeUZpbGVzTGlua0RpcmVjdCJ9fQ&amp;e=RNTDJa">說明影片</a>.</p>
<hr/>
<p>w7</p>
<p>2b 進行九人一組安排固定座位, 由組長建立 cad2023_bg1 ~ cad2023_bg6, 並將 mdecycu 設為協同者.</p>
<p><span>各九人分組必須在 w9 之前繳出下列圖示的 3D 可自行列印的零組件模型, 含各 CAD 套件的完整安裝與零組件繪圖過程影片(期中考週由各組進行簡報)</span>.</p>
<ol>
<li>SolidWorks, 請採用<span> </span><a href="https://mde.tw/cadnote/content/solidworks.html">2022 以上版本</a>, 安裝檔案 SOLIDWORKS 2022 SP3.1_20220711.7z 16GB .</li>
<li>NX, 請採用<span> </span><a href="https://nfuedu-my.sharepoint.com/:u:/g/personal/yen_nfu_edu_tw/EdHAOThcQztGj4EZy5Duab0Bvcf3AbzsC_MLsCfmwBXAFg?e=BUHMy3">NX2027.3401_lite_cad2022.7z<span> </span></a>(需要下載密碼, 下載 2GB, 解開後約 8GB).</li>
<li>Inventor, 請在校網或使用 VPN 下載 2022 版本 (載點<span> </span><a href="https://edutrial.autodesk.com/NetSWDLD/2022/INVPROSA/7FA83A8F-9EC9-328A-AFE2-16965CA8F58B/SFX/Inventor_Pro_2022_Traditional_Chinese_Win_64bit_Dlm_001_003.sfx.exe">1</a>,<span> </span><a href="https://edutrial.autodesk.com/NetSWDLD/2022/INVPROSA/7FA83A8F-9EC9-328A-AFE2-16965CA8F58B/SFX/Inventor_Pro_2022_Traditional_Chinese_Win_64bit_Dlm_002_003.sfx.exe">2</a>,<span> </span><a href="https://edutrial.autodesk.com/NetSWDLD/2022/INVPROSA/7FA83A8F-9EC9-328A-AFE2-16965CA8F58B/SFX/Inventor_Pro_2022_Traditional_Chinese_Win_64bit_Dlm_003_003.sfx.exe">3</a>, 安裝檔案 Inventor_Pro_2022_Traditional_Chinese_Win_64bit_Dlm_001_003.sfx.exe 2GB).</li>
<li>Solid Edge, 請使用<span> </span><a href="https://resources.sw.siemens.com/en-US/download-solid-edge-community-edition">Community Edition</a>, Gmail 登入後, 下載 Solid_Edge_Community_2023_2210.exe 3.8GB.</li>
<li>Creo, 請使用<span> </span><a href="https://www.ptc.com/en/products/education/free-software/creo-college-download">Student Edition</a>, 以學校電子郵箱註冊可以下載 Creo 10 (MED-100WIN-CD-470_10-0-0-0_Win64.zip 安裝檔案 5.9GB),<span> </span><a href="https://apps.ptc.com/schools/references/install_creo10_unistudent_standard.pdf">參考資料</a>.</li>
<li><a href="https://www.onshape.com/en/">Onshape</a>.</li>
<li>Fusion 360, 請在校網或使用 VPN<span> </span><a href="https://dl.appstreaming.autodesk.com/production/installers/Fusion%20360%20Admin%20Install.exe">下載</a>, Fusion 360 Admin Install.exe 安裝檔案 GB.</li>
</ol>
<p><img alt="" height="264" src="https://mde.tw/cadnote/images/electromagnetic_activated_cyclic_circulation_motion_system.gif" width="400"/></p>
<p></p>
<hr/>
<p>
<script src="https://unpkg.com/three@0.144.0/build/three.js" type="text/javascript"></script>
</p>